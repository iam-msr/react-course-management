{"version":3,"file":"static/js/358.6c57d704.chunk.js","mappings":"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","sources":["mocks/data/students.js","mocks/data/courses.js","mocks/handlers.js","mocks/browser.js"],"sourcesContent":["// src/mocks/data/students.js\r\nexport const students = [\r\n    {\r\n        id: 1,\r\n        name: 'Sriram',\r\n        email: 'sriram@mail.com',\r\n        coursesEnrolled: [\r\n            { id: 1, progress: '30%' },\r\n            { id: 3, progress: '90%' },\r\n            { id: 4, progress: '40%' },\r\n            { id: 5, progress: '60%' },\r\n            { id: 6, progress: '80%' },\r\n            { id: 7, progress: '10%' },\r\n            { id: 8, progress: '20%' },\r\n            { id: 9, progress: '50%' },\r\n            { id: 10, progress: '100%' }\r\n        ]\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Bob',\r\n        email: 'bob@mail.com',\r\n        coursesEnrolled: [\r\n            { id: 1, progress: '50%' },\r\n            { id: 4, progress: '70%' },\r\n            { id: 3, progress: '30%' },\r\n            { id: 8, progress: '60%' },\r\n            { id: 7, progress: '80%' }\r\n        ]\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Alice',\r\n        email: 'alice@mail.com',\r\n        coursesEnrolled: [\r\n            { id: 2, progress: '20%' },\r\n            { id: 5, progress: '40%' },\r\n            { id: 6, progress: '60%' },\r\n            { id: 9, progress: '80%' },\r\n            { id: 10, progress: '100%' }\r\n        ]\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'John',\r\n        email: 'john@mail.com',\r\n        coursesEnrolled: []\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Sriram Mudragada',\r\n        email: 'sriram.mudragada4269@gmail.com',\r\n        coursesEnrolled: [\r\n            { id: 1, progress: '40%' },\r\n            { id: 2, progress: '70%' },\r\n            { id: 3, progress: '20%' },\r\n            { id: 4, progress: '50%' },\r\n            { id: 5, progress: '80%' },\r\n            { id: 6, progress: '10%' },\r\n            { id: 7, progress: '30%' },\r\n            { id: 8, progress: '60%' },\r\n            { id: 9, progress: '90%' },\r\n            { id: 10, progress: '100%' }\r\n        ]\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Crazy Folk',\r\n        email: 'iamacrazyfolk@gmail.com',\r\n        coursesEnrolled: [\r\n            { id: 1, progress: '20%' },\r\n            { id: 2, progress: '40%' },\r\n            { id: 3, progress: '60%' },\r\n            { id: 4, progress: '80%' },\r\n            { id: 5, progress: '100%' },\r\n            { id: 6, progress: '10%' },\r\n            { id: 7, progress: '30%' },\r\n            { id: 8, progress: '50%' },\r\n            { id: 9, progress: '70%' },\r\n            { id: 10, progress: '90%' }\r\n        ]\r\n    }\r\n];\r\n","// Data for the courses page-  src/mocks/data/courses.js\r\n\r\n//Import the thumbnail images\r\nimport courseId1 from '../../assets/thumbnails/courses/courseId1.jpg';\r\nimport courseId2 from '../../assets/thumbnails/courses/courseId2.jpg';\r\nimport courseId3 from '../../assets/thumbnails/courses/courseId3.jpg';\r\nimport courseId4 from '../../assets/thumbnails/courses/courseId4.jpg';\r\nimport courseId5 from '../../assets/thumbnails/courses/courseId5.jpg';\r\nimport courseId6 from '../../assets/thumbnails/courses/courseId6.jpg';\r\nimport courseId7 from '../../assets/thumbnails/courses/courseId7.jpg';\r\nimport courseId8 from '../../assets/thumbnails/courses/courseId8.jpg';\r\nimport courseId9 from '../../assets/thumbnails/courses/courseId9.jpg';\r\nimport courseId10 from '../../assets/thumbnails/courses/courseId10.jpg';\r\n\r\nexport const courses = [\r\n    {\r\n        id: 1, // Unique identifier for the course\r\n        name: 'Introduction to React Native',\r\n        instructor: 'John Doe', // Name of the course instructor\r\n        description: 'Learn the basics of React Native development and build your first mobile app.',\r\n        enrollmentStatus: 'Open', // Can be 'Open', 'Closed', or 'InProgress\r\n        thumbnail: courseId1, //Link to the course thumbnail\r\n        duration: '8 weeks', // Duration of the course\r\n        schedule: 'Tuesdays and Thursdays, 6:00 PM - 8:00 PM',\r\n        location: 'Online',\r\n        prerequisites: ['Basic JavaScript knowledge', 'Familiarity with React'],\r\n        syllabus: [\r\n            {\r\n                week: 1,\r\n                topic: 'Introduction to React Native',\r\n                content: 'Overview of React Native, setting up your development environment.'\r\n            },\r\n            {\r\n                week: 2,\r\n                topic: 'Building your first app',\r\n                content: 'Creating a simple mobile app using React Native.'\r\n            },\r\n            {\r\n                week: 3,\r\n                topic: 'Styling and layout',\r\n                content: 'Styling your app using CSS and Flexbox.'\r\n            },\r\n            {\r\n                week: 4,\r\n                topic: 'Navigation',\r\n                content: 'Adding navigation to your app using React Navigation.'\r\n            },\r\n            {\r\n                week: 5,\r\n                topic: 'State management',\r\n                content: 'Managing state in your app using React Hooks.'\r\n            },\r\n            {\r\n                week: 6,\r\n                topic: 'API integration',\r\n                content: 'Fetching data from an API and displaying it in your app.'\r\n            },\r\n            {\r\n                week: 7,\r\n                topic: 'Testing and debugging',\r\n                content: 'Testing your app and debugging common issues.'\r\n            },\r\n            {\r\n                week: 8,\r\n                topic: 'Deployment',\r\n                content: 'Building and deploying your app to the App Store and Google Play.'\r\n            }\r\n        ],\r\n        studentsEnrolled: ['1', '2', '4', '5'],\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Advanced React Development',\r\n        instructor: 'Jane Smith',\r\n        description: 'Take your React skills to the next level with this advanced course.',\r\n        enrollmentStatus: 'Open',\r\n        thumbnail: courseId2,\r\n        duration: '12 weeks',\r\n        schedule: 'Mondays and Wednesdays, 6:00 PM - 8:00 PM',\r\n        location: 'Online',\r\n        prerequisites: ['Intermediate JavaScript knowledge', 'Experience with React'],\r\n        syllabus: [\r\n            {\r\n                week: 1,\r\n                topic: 'Advanced React concepts',\r\n                content: 'Overview of advanced React concepts and best practices.'\r\n            },\r\n            {\r\n                week: 2,\r\n                topic: 'React performance',\r\n                content: 'Optimizing your React app for performance.'\r\n            },\r\n            {\r\n                week: 3,\r\n                topic: 'Server-side rendering',\r\n                content: 'Implementing server-side rendering in your React app.'\r\n            },\r\n            {\r\n                week: 4,\r\n                topic: 'State management with Redux',\r\n                content: 'Managing state in your app using Redux.'\r\n            },\r\n            {\r\n                week: 5,\r\n                topic: 'Testing React apps',\r\n                content: 'Writing tests for your React components.'\r\n            },\r\n            {\r\n                week: 6,\r\n                topic: 'React patterns and best practices',\r\n                content: 'Common patterns and best practices for React development.'\r\n            },\r\n            {\r\n                week: 7,\r\n                topic: 'React hooks in depth',\r\n                content: 'Exploring advanced use cases for React hooks.'\r\n            },\r\n            {\r\n                week: 8,\r\n                topic: 'Advanced API integration',\r\n                content: 'Integrating with GraphQL and other advanced APIs.'\r\n            },\r\n            {\r\n                week: 9,\r\n                topic: 'React Native development',\r\n                content: 'Building mobile apps with React Native.'\r\n            },\r\n            {\r\n                week: 10,\r\n                topic: 'React and TypeScript',\r\n                content: 'Using TypeScript with React for type safety.'\r\n            },\r\n            {\r\n                week: 11,\r\n                topic: 'React and serverless',\r\n                content: 'Building serverless applications with React.'\r\n            },\r\n            {\r\n                week: 12,\r\n                topic: 'Final project',\r\n                content: 'Building a complete React application from scratch.'\r\n            }\r\n        ],\r\n        studentsEnrolled: ['1', '3', '4'],\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Python for Beginners',\r\n        instructor: 'Alice Johnson',\r\n        description: 'An introductory course to Python programming. Ideal for those new to coding.',\r\n        enrollmentStatus: 'Open',\r\n        thumbnail: courseId3,\r\n        duration: '6 weeks',\r\n        schedule: 'Mondays and Wednesdays, 5:00 PM - 7:00 PM',\r\n        location: 'Online',\r\n        prerequisites: ['None'],\r\n        syllabus: [\r\n            { week: 1, topic: 'Introduction to Python', content: 'Setting up Python and writing your first script.' },\r\n            { week: 2, topic: 'Basic Syntax and Variables', content: 'Understanding Python syntax and variable types.' },\r\n            { week: 3, topic: 'Control Structures', content: 'Using if statements, loops, and handling exceptions.' },\r\n            { week: 4, topic: 'Functions and Modules', content: 'Creating and using functions and modules in Python.' },\r\n            { week: 5, topic: 'File Handling', content: 'Reading from and writing to files.' },\r\n            { week: 6, topic: 'Project Work', content: 'Building a small project using Python.' }\r\n        ],\r\n        studentsEnrolled: [],\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Angular Fundamentals',\r\n        instructor: 'Bob Lee',\r\n        description: 'Learn the basics of Angular and how to build single-page applications using this powerful framework.',\r\n        enrollmentStatus: 'Closed',\r\n        thumbnail: courseId4,\r\n        duration: '8 weeks',\r\n        schedule: 'Tuesdays and Thursdays, 4:00 PM - 6:00 PM',\r\n        location: 'Online',\r\n        prerequisites: ['Basic JavaScript knowledge', 'Understanding of HTML and CSS'],\r\n        syllabus: [\r\n            { week: 1, topic: 'Introduction to Angular', content: 'Setting up Angular and understanding its architecture.' },\r\n            { week: 2, topic: 'Components and Templates', content: 'Creating and using Angular components and templates.' },\r\n            { week: 3, topic: 'Data Binding', content: 'Understanding one-way and two-way data binding in Angular.' },\r\n            { week: 4, topic: 'Directives', content: 'Using built-in and custom directives in Angular.' },\r\n            { week: 5, topic: 'Services and Dependency Injection', content: 'Creating and injecting services in Angular.' },\r\n            { week: 6, topic: 'Routing and Navigation', content: 'Implementing routing and navigation in an Angular application.' },\r\n            { week: 7, topic: 'Forms and Validation', content: 'Working with forms and validation in Angular.' },\r\n            { week: 8, topic: 'Deployment', content: 'Building and deploying an Angular application.' }\r\n        ],\r\n        studentsEnrolled: [],\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Node.js Essentials',\r\n        instructor: 'Carol Martin',\r\n        description: 'A comprehensive course on Node.js, covering server-side development and asynchronous programming.',\r\n        enrollmentStatus: 'Open',\r\n        thumbnail: courseId5,\r\n        duration: '10 weeks',\r\n        schedule: 'Mondays and Fridays, 6:00 PM - 8:00 PM',\r\n        location: 'Online',\r\n        prerequisites: ['Basic JavaScript knowledge'],\r\n        syllabus: [\r\n            { week: 1, topic: 'Introduction to Node.js', content: 'Understanding the basics of Node.js and setting up your environment.' },\r\n            { week: 2, topic: 'Core Modules', content: 'Exploring Node.js core modules and their uses.' },\r\n            { week: 3, topic: 'Asynchronous Programming', content: 'Understanding callbacks, promises, and async/await.' },\r\n            { week: 4, topic: 'Creating a Web Server', content: 'Building a basic web server using Node.js.' },\r\n            { week: 5, topic: 'Working with Databases', content: 'Connecting to and querying databases using Node.js.' },\r\n            { week: 6, topic: 'RESTful APIs', content: 'Creating RESTful APIs with Node.js and Express.' },\r\n            { week: 7, topic: 'Error Handling', content: 'Implementing error handling in your Node.js applications.' },\r\n            { week: 8, topic: 'Authentication and Authorization', content: 'Implementing user authentication and authorization.' },\r\n            { week: 9, topic: 'Testing Node.js Applications', content: 'Writing tests for Node.js applications.' },\r\n            { week: 10, topic: 'Deployment and Scaling', content: 'Deploying and scaling your Node.js applications.' }\r\n        ],\r\n        studentsEnrolled: [],\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Introduction to Django',\r\n        instructor: 'David Wilson',\r\n        description: 'Get started with Django, a high-level Python web framework for building web applications quickly and efficiently.',\r\n        enrollmentStatus: 'Open',\r\n        thumbnail: courseId6,\r\n        duration: '8 weeks',\r\n        schedule: 'Tuesdays and Thursdays, 7:00 PM - 9:00 PM',\r\n        location: 'Online',\r\n        prerequisites: ['Basic Python knowledge'],\r\n        syllabus: [\r\n            { week: 1, topic: 'Django Overview', content: 'Introduction to Django and its features.' },\r\n            { week: 2, topic: 'Setting Up Django', content: 'Installing and configuring Django.' },\r\n            { week: 3, topic: 'Creating Django Projects', content: 'Creating and managing Django projects.' },\r\n            { week: 4, topic: 'Models and Databases', content: 'Working with Django models and databases.' },\r\n            { week: 5, topic: 'Views and Templates', content: 'Creating views and templates in Django.' },\r\n            { week: 6, topic: 'Forms and Validation', content: 'Handling forms and validation in Django.' },\r\n            { week: 7, topic: 'User Authentication', content: 'Implementing user authentication and authorization.' },\r\n            { week: 8, topic: 'Deployment', content: 'Deploying a Django application to a web server.' }\r\n        ],\r\n        studentsEnrolled: [],\r\n    },\r\n    {\r\n        id: 7,\r\n        name: 'Web Development with Flask',\r\n        instructor: 'Grace Taylor',\r\n        description: 'Explore Flask, a micro web framework for Python, and learn to build scalable web applications.',\r\n        enrollmentStatus: 'Open',\r\n        thumbnail: courseId7,\r\n        duration: '7 weeks',\r\n        schedule: 'Tuesdays and Thursdays, 6:00 PM - 8:00 PM',\r\n        location: 'Online',\r\n        prerequisites: ['Basic Python knowledge'],\r\n        syllabus: [\r\n            { week: 1, topic: 'Introduction to Flask', content: 'Setting up Flask and understanding its core components.' },\r\n            { week: 2, topic: 'Routing and Views', content: 'Creating routes and views in Flask.' },\r\n            { week: 3, topic: 'Templates and Forms', content: 'Using Jinja templates and handling forms in Flask.' },\r\n            { week: 4, topic: 'Databases with Flask', content: 'Integrating databases and ORM with Flask.' },\r\n            { week: 5, topic: 'User Authentication', content: 'Implementing user authentication and session management.' },\r\n            { week: 6, topic: 'REST APIs with Flask', content: 'Building RESTful APIs using Flask.' },\r\n            { week: 7, topic: 'Deployment', content: 'Deploying Flask applications to a web server.' }\r\n        ],\r\n        studentsEnrolled: [],\r\n    },\r\n    {\r\n        id: 8,\r\n        name: 'Introduction to Kubernetes',\r\n        instructor: 'Hannah Lewis',\r\n        description: 'Learn the basics of Kubernetes for container orchestration and management of containerized applications.',\r\n        enrollmentStatus: 'Open',\r\n        thumbnail: courseId8,\r\n        duration: '6 weeks',\r\n        schedule: 'Wednesdays and Fridays, 6:00 PM - 8:00 PM',\r\n        location: 'Online',\r\n        prerequisites: ['Basic understanding of Docker'],\r\n        syllabus: [\r\n            { week: 1, topic: 'Introduction to Kubernetes', content: 'Understanding the architecture and components of Kubernetes.' },\r\n            { week: 2, topic: 'Setting Up Kubernetes', content: 'Installing and configuring a Kubernetes cluster.' },\r\n            { week: 3, topic: 'Deploying Applications', content: 'Deploying and managing applications in Kubernetes.' },\r\n            { week: 4, topic: 'Services and Networking', content: 'Understanding Kubernetes services and networking.' },\r\n            { week: 5, topic: 'Storage and Volumes', content: 'Managing storage and volumes in Kubernetes.' },\r\n            { week: 6, topic: 'Monitoring and Troubleshooting', content: 'Monitoring and troubleshooting Kubernetes clusters and applications.' }\r\n        ],\r\n        studentsEnrolled: [],\r\n    },\r\n    {\r\n        id: 9,\r\n        name: 'AWS Cloud Fundamentals',\r\n        instructor: 'Jack Green',\r\n        description: 'Get started with Amazon Web Services (AWS) and learn to deploy and manage applications in the cloud.',\r\n        enrollmentStatus: 'Open',\r\n        thumbnail: courseId9,\r\n        duration: '7 weeks',\r\n        schedule: 'Tuesdays and Thursdays, 6:00 PM - 8:00 PM',\r\n        location: 'Online',\r\n        prerequisites: ['Basic understanding of cloud computing'],\r\n        syllabus: [\r\n            { week: 1, topic: 'Introduction to AWS', content: 'Overview of AWS services and architecture.' },\r\n            { week: 2, topic: 'EC2 and S3', content: 'Working with EC2 instances and S3 storage.' },\r\n            { week: 3, topic: 'Networking and VPCs', content: 'Understanding networking and Virtual Private Clouds (VPCs).' },\r\n            { week: 4, topic: 'IAM and Security', content: 'Managing identity and access with IAM.' },\r\n            { week: 5, topic: 'Databases and RDS', content: 'Using AWS databases and RDS.' },\r\n            { week: 6, topic: 'Deployment and Automation', content: 'Deploying applications and automating workflows with AWS.' },\r\n            { week: 7, topic: 'Monitoring and Cost Management', content: 'Monitoring AWS resources and managing costs.' }\r\n        ],\r\n        studentsEnrolled: [],\r\n    },\r\n    {\r\n        id: 10,\r\n        name: 'Mastering JavaScript',\r\n        instructor: 'Emily Davis',\r\n        description: 'Dive deep into JavaScript and learn advanced concepts and best practices for modern development.',\r\n        enrollmentStatus: 'InProgress',\r\n        thumbnail: courseId10,\r\n        duration: '10 weeks',\r\n        schedule: 'Wednesdays and Fridays, 6:00 PM - 8:00 PM',\r\n        location: 'Online',\r\n        prerequisites: ['Basic JavaScript knowledge'],\r\n        syllabus: [\r\n            { week: 1, topic: 'Advanced JavaScript Concepts', content: 'Exploring advanced JavaScript features and concepts.' },\r\n            { week: 2, topic: 'Asynchronous JavaScript', content: 'Working with asynchronous JavaScript, callbacks, and promises.' },\r\n            { week: 3, topic: 'JavaScript ES6+', content: 'Understanding new features introduced in ES6 and later.' },\r\n            { week: 4, topic: 'Functional Programming', content: 'Applying functional programming principles in JavaScript.' },\r\n            { week: 5, topic: 'Object-Oriented JavaScript', content: 'Using object-oriented programming techniques in JavaScript.' },\r\n            { week: 6, topic: 'JavaScript Design Patterns', content: 'Applying common design patterns in JavaScript.' },\r\n            { week: 7, topic: 'Testing JavaScript', content: 'Writing and running tests for JavaScript code.' },\r\n            { week: 8, topic: 'JavaScript Performance Optimization', content: 'Optimizing JavaScript code for better performance.' },\r\n            { week: 9, topic: 'JavaScript with Web APIs', content: 'Working with web APIs and integrating them with JavaScript.' },\r\n            { week: 10, topic: 'Final Project', content: 'Building a complex JavaScript application as a final project.' }\r\n        ],\r\n        studentsEnrolled: [],\r\n    }\r\n];","//mocks/handlers.js\r\nimport {http, HttpResponse} from 'msw';\r\nimport {students} from './data/students';\r\nimport {courses} from './data/courses';\r\n\r\nexport const handlers = [\r\n  http.get('/api/users', () => {\r\n    // Respond with the list of students\r\n    return HttpResponse.json(students);\r\n  }),\r\n\r\n  http.get('/api/courses', () => {\r\n    // Respond with the list of courses\r\n    return HttpResponse.json(courses);\r\n  }),\r\n\r\n  http.patch('/api/users/:userId/progress', async ({ request, params }) => {\r\n    const { userId } = params;\r\n    const { courseId, progress } = await request.json();\r\n\r\n    // Find the student by ID\r\n    const student = students.find(student => student.id === parseInt(userId));\r\n    if (student) {\r\n      // Find the course in the student's enrolled courses and update the progress\r\n      const course = student.coursesEnrolled.find(course => course.id === courseId);\r\n      if (course) {\r\n        course.progress = progress; // Update course progress\r\n      }\r\n    }\r\n\r\n    // Return the updated student data\r\n    return HttpResponse.json(student);\r\n  })\r\n\r\n];","// src/mocks/browser.js\r\nimport { setupWorker } from 'msw/browser'\r\nimport { handlers } from './handlers'\r\n \r\nexport const worker = setupWorker(...handlers)"],"names":["students","id","name","email","coursesEnrolled","progress","courses","instructor","description","enrollmentStatus","thumbnail","duration","schedule","location","prerequisites","syllabus","week","topic","content","studentsEnrolled","handlers","http","get","HttpResponse","json","patch","async","request","params","_ref","userId","courseId","student","find","parseInt","course","worker","setupWorker"],"sourceRoot":""}